trigger:
  batch: true
  branches:
    include:
    - master
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'Resources/CI/build-artifacts-library-logged.yaml'
    - 'Resources/Scripts/Inject logging.ps1'

pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version: '5.2.1'

name: $(TeamProject)_$(SourceBranchName)_BuildLibraryLogged_$(version)$(Rev:.r)

steps:
- task: PowerShell@2
  displayName: Inject logging
  inputs:
    targetType: filePath
    filePath: '$(Build.SourcesDirectory)/Resources/Scripts/Inject logging.ps1'

- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: 'build'
    projects: |
      DryWetMidi/Melanchall.DryWetMidi.csproj
    arguments: '--configuration $(buildConfiguration)'

- task: ArchiveFiles@2
  displayName: Archive .NET Framework binaries
  inputs:
    rootFolderOrFile: 'DryWetMidi\bin\$(buildConfiguration)\net45'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)\Binaries\DryWetMIDI.$(version)-bin-net45.zip'

- task: ArchiveFiles@2
  displayName: Archive .NET Standard binaries
  inputs:
    rootFolderOrFile: 'DryWetMidi\bin\$(buildConfiguration)\netstandard2.0'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)\Binaries\DryWetMIDI.$(version)-bin-netstandard20.zip'

- task: PublishPipelineArtifact@1
  displayName: Publish 'Binaries' artifact
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)\Binaries
    artifact: Binaries